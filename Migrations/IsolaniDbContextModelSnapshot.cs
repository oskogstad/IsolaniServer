// <auto-generated />
using System;
using Isolani.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Isolani.Migrations
{
    [DbContext(typeof(IsolaniDbContext))]
    partial class IsolaniDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Isolani.Models.ChessClub", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ChessClubs");
                });

            modelBuilder.Entity("Isolani.Models.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("GameState")
                        .IsRequired();

                    b.Property<Guid>("PlayerBlackId");

                    b.Property<Guid>("PlayerWhiteId");

                    b.Property<DateTime>("StartDateUtc");

                    b.Property<Guid>("TournamentId");

                    b.HasKey("Id");

                    b.HasIndex("PlayerBlackId");

                    b.HasIndex("PlayerWhiteId");

                    b.HasIndex("TournamentId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Isolani.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BirthYear");

                    b.Property<int?>("BlitzRating");

                    b.Property<Guid?>("ChessClubId");

                    b.Property<string>("Country");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("RapidRating");

                    b.Property<int?>("StandardRating");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Isolani.Models.Tournament", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ArrangingChessClubId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Tournaments");
                });

            modelBuilder.Entity("Isolani.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDateUtc");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<DateTime>("LastLoginDateUtc");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Isolani.Models.Game", b =>
                {
                    b.HasOne("Isolani.Models.User", "PlayerBlack")
                        .WithMany()
                        .HasForeignKey("PlayerBlackId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Isolani.Models.User", "PlayerWhite")
                        .WithMany()
                        .HasForeignKey("PlayerWhiteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Isolani.Models.Tournament")
                        .WithMany("Games")
                        .HasForeignKey("TournamentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
